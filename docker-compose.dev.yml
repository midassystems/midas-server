services:
  dev-postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - app-network
    restart: always

  dev-migrate-database:
    build:
      context: .
      dockerfile: ./database/Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password 
      POSTGRES_HOST: dev-postgres 
      HISTORICAL_DATABASE_URL: postgres://postgres:password@dev-postgres:5432/market_data
      TRADING_DATABASE_URL: postgres://postgres:password@dev-postgres:5432/trading_data
    depends_on:
      - dev-postgres  # Ensure PostgreSQL is ready first
    command: >
      sh -c "
              /app/scripts/migrate-db.sh historical && 
              /app/scripts/migrate-db.sh trading
            "
    networks:
      - app-network

  # Historical service
  dev-historical-service: 
    build:
      context: .
      dockerfile: "./historical/Dockerfile"
    environment:
      HISTORICAL_DATABASE_URL: postgres://postgres:password@dev-postgres:5432/market_data
      HISTORICAL_PORT: "8080"
      LOG_FILE: /app/logs/historical.log
      LOG_LEVEL: info
    depends_on:
      - dev-migrate-database
    ports:
      - "8080:8080"  
    volumes:
      - data:/app/data
      - logs:/app/logs
      - scripts:/app/scripts
    command: ["./midas-historical"]
    networks:
      - app-network 
    restart: always

  # Trading service
  dev-trading-service: 
    build:
      context: .
      dockerfile: "./trading/Dockerfile"
    environment:
      TRADING_DATABASE_URL: postgres://postgres:password@dev-postgres:5432/trading_data
      TRADING_PORT: "8081" 
      LOG_FILE: /app/logs/trading.log
      LOG_LEVEL: info
    depends_on:
      - dev-migrate-database
    ports:
      - "8081:8081"  
    volumes:
      - data:/app/data
      - logs:/app/logs
      - scripts:/app/scripts
    command: ["./midas-trading"]
    networks:
      - app-network
    restart: always


  # Instrument service
  dev-instrument-service: 
    build:
      context: .
      dockerfile: "./instrument/Dockerfile"
    environment:
      INSTRUMENT_DATABASE_URL: postgres://postgres:password@dev-postgres:5432/market_data
      INSTRUMENT_PORT: "8082" 
      LOG_FILE: /app/logs/instrument.log
      LOG_LEVEL: info
    depends_on:
      - dev-migrate-database
    ports:
      - "8082:8082"  
    volumes:
      - data:/app/data
      - logs:/app/logs
      - scripts:/app/scripts
    command: ["./midas-instrument"]
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./logs 
  data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data   
  scripts:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./scripts
  dev_postgres_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./postgres/data  




